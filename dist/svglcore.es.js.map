{"version":3,"file":"svglcore.es.js","sources":["../src/Tools.js","../src/renderModes.js","../src/Constants.js","../src/MeshView.js","../src/Mesh.js","../src/Scene.js","../src/PerspectiveCamera.js","../src/Renderer.js","../node_modules/wavefront-obj-parser/src/wavefront-obj-parser.js","../src/ObjParser.js","../src/index.js"],"sourcesContent":["/* eslint-disable no-mixed-operators */\n/* eslint-disable no-bitwise */\nclass Tools {\n  static uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n      const r = Math.random() * 16 | 0\n      const v = c === 'x' ? r : (r & 0x3 | 0x8)\n      return v.toString(16)\n    });\n  }\n}\n\nexport default Tools\n","export default {\n  POINT_CLOUD: 0,\n  POLYLINE: 1,\n  TRIANGLE_WIREFRAME: 2,\n}\n","export default {\n  SVG_NAMESPACE: 'http://www.w3.org/2000/svg',\n}\n","import CONSTANTS from './Constants'\n\n/**\n * A MeshView is a rendered SVG version of a given Mesh.\n * Each Mesh is associated to a MeshView\n */\nclass MeshView {\n  constructor(mesh) {\n    this._mesh = mesh\n\n    this._view = document.createElementNS(CONSTANTS.SVG_NAMESPACE, 'g')\n    this._view.setAttributeNS(null, 'id', mesh.id)\n\n    this._circlePool = []\n    this._circlePoolCounter = 0\n  }\n\n\n  get mesh() {\n    return this._mesh\n  }\n\n\n  get view() {\n    return this._view\n  }\n\n\n  reset() {\n    // TODO: compare which is best\n    this._view.innerHTML = ''\n    // while (this._view.firstChild) {\n    //   this._view.removeChild(this._view.firstChild)\n    // }\n    this._circlePoolCounter = 0\n  }\n\n\n  /**\n   * \n   * @param {*} x \n   * @param {*} y \n   * @param {*} radius \n   */\n  addCircle(x, y, radius) {\n    let circle = null\n\n    // the pool is not large enough, we create a new circle\n    if (this._circlePool.length < this._circlePoolCounter + 1 ) {\n      circle = document.createElementNS(CONSTANTS.SVG_NAMESPACE, 'circle')\n      this._circlePool.push(circle)\n    } else {\n    // The pool is large enough, we borrow a circle from the pool\n      circle = this._circlePool[this._circlePoolCounter]\n    }\n\n    this._circlePoolCounter += 1\n\n    circle.setAttributeNS(null, 'cx', x)\n    circle.setAttributeNS(null, 'cy', y)\n    circle.setAttributeNS(null, 'r', radius)\n    // circle.setAttributeNS(null, 'id', this._mesh.id)\n    circle.setAttributeNS(null, 'fill', this._mesh.color)\n    circle.setAttributeNS(null, 'opacity', this._mesh.opacity)\n    circle.setAttributeNS(null, 'stroke-width', 0)\n    this._view.appendChild(circle)\n  }\n}\n\nexport default MeshView\n","import * as glmatrix from 'gl-matrix'\nimport Tools from './Tools'\nimport RENDER_MODES from './renderModes'\nimport MeshView from './MeshView'\n\nclass Mesh {\n  constructor() {\n    this._id = Tools.uuidv4()\n    this._meshView = new MeshView(this)\n\n    // if visible is false, this mesh will not be rendered\n    this._visible = true\n\n    // geometry data\n    this._vertices = null\n    this._worldVertices = null\n    this._faces = null\n    this._verticesPerFace = 3\n    this._boundingBox = {\n      min: glmatrix.vec3.fromValues(0, 0, 0),\n      max: glmatrix.vec3.fromValues(0, 0, 0),\n    }\n\n    this._scale = glmatrix.vec3.fromValues(1, 1, 1)\n    this._quaternion = glmatrix.quat.create()\n    this._position = glmatrix.vec3.create()\n\n    // material data\n    this._renderMode = RENDER_MODES.POINT_CLOUD\n    this._color = '#000'\n    this._opacity = 1\n    this._lineThickness = 1\n    this._radius = 1\n\n    this._matrix = glmatrix.mat4.create()\n    this._worldVerticesMustUpdate = true\n  }\n\n\n  get id() {\n    return this._id\n  }\n\n\n  set renderMode(rm) {\n    if (Object.values(RENDER_MODES).includes(rm)) {\n      this._renderMode = rm\n    } else {\n      throw new Error('The render mode is incorrect.')\n    }\n  }\n\n\n  get renderMode() {\n    return this._renderMode\n  }\n\n\n  set lineThickness(t) {\n    this._lineThickness = t\n  }\n\n\n  get lineThickness() {\n    return this._lineThickness\n  }\n\n\n  set radius(r) {\n    this._radius = r\n  }\n\n\n  get radius() {\n    return this._radius\n  }\n\n\n  set vertices(v) {\n    if (v.length % 3 !== 0) {\n      throw new Error('The vertice array length must be multiple of 3.')\n    }\n\n    this._vertices = v\n    this._worldVertices = new v.constructor(v.length)\n    return this\n  }\n\n\n  get vertices() {\n    return this._vertices\n  }\n\n\n  get worldVertices() {\n\n    if (!this._worldVerticesMustUpdate) {\n      return this._worldVertices\n    }\n\n    const mat = this.modelMatrix\n    const tmpVec3 = glmatrix.vec3.create()\n    const vert = this._vertices\n\n    for (let i = 0; i < this._worldVertices.length; i += 3) {\n      tmpVec3[0] = vert[i]\n      tmpVec3[1] = vert[i + 1]\n      tmpVec3[2] = vert[i + 2]\n\n      glmatrix.vec3.transformMat4(tmpVec3, tmpVec3, mat)\n      this._worldVertices[i] = tmpVec3[0]\n      this._worldVertices[i + 1] = tmpVec3[1]\n      this._worldVertices[i + 2] = tmpVec3[2]\n    }\n\n    this._worldVerticesMustUpdate = false\n    return this._worldVertices\n  }\n\n\n  set faces(f) {\n    this._faces = f\n  }\n\n\n  get faces() {\n    return this._faces\n  }\n\n\n  set color(c) {\n    this._color = c\n  }\n\n\n  get color() {\n    return this._color\n  }\n\n\n  set opacity(o) {\n    this._opacity = o\n  }\n\n\n  get opacity() {\n    return this._opacity\n  }\n\n\n  set verticesPerFace(vpf) {\n    this._verticesPerFace = vpf\n  }\n\n\n  get verticesPerFace() {\n    return this._verticesPerFace\n  }\n\n  get visible() {\n    return this._visible\n  }\n\n\n  set visible(v) {\n    this._visible = v\n  }\n\n\n  /**\n   * Note: the bounding box is in world coordinates\n   */\n  computeBoundingBox() {\n    if (this._vertices === null) {\n      throw new Error('This mesh does not have any vertex.')\n    }\n\n    let minx = +Infinity\n    let miny = +Infinity\n    let minz = +Infinity\n    let maxx = -Infinity\n    let maxy = -Infinity\n    let maxz = -Infinity\n\n    for (let i = 0; i < this._vertices.length; i += 3) {\n      minx = Math.min(minx, this._vertices[i])\n      miny = Math.min(miny, this._vertices[i + 1])\n      minz = Math.min(minz, this._vertices[i + 2])\n      maxx = Math.max(maxx, this._vertices[i])\n      maxy = Math.max(maxy, this._vertices[i + 1])\n      maxz = Math.max(maxz, this._vertices[i + 2])\n    }\n\n    const modelMat = this.modelMatrix\n    const minInWorld = glmatrix.vec3.create()\n    const maxInWorld = glmatrix.vec3.create()\n    glmatrix.vec3.transformMat4(minInWorld, [minx, miny, minz], modelMat)\n    glmatrix.vec3.transformMat4(maxInWorld, [maxx, maxy, maxz], modelMat)\n\n    // if the model matrix encodes a rotation, min and max could be swapped on some dimensions\n    this._boundingBox.min[0] = Math.min(minInWorld[0], maxInWorld[0])\n    this._boundingBox.min[1] = Math.min(minInWorld[1], maxInWorld[1])\n    this._boundingBox.min[2] = Math.min(minInWorld[2], maxInWorld[2])\n    this._boundingBox.max[0] = Math.max(minInWorld[0], maxInWorld[0])\n    this._boundingBox.max[1] = Math.max(minInWorld[1], maxInWorld[1])\n    this._boundingBox.max[2] = Math.max(minInWorld[2], maxInWorld[2])\n\n    return this\n  }\n\n\n  get boundingBox() {\n    return this._boundingBox\n  }\n\n\n  get modelMatrix() {\n    return this._matrix\n  }\n\n\n  get meshView() {\n    return this._meshView\n  }\n\n\n  set position(p) {\n    this._position[0] = p[0]\n    this._position[2] = p[1]\n    this._position[3] = p[2]\n    this.updateMatrix()\n  }\n\n\n  get position() {\n    return this._position.slice()\n  }\n\n\n  set quaternion(q) {\n    this._quaternion[0] = q[0]\n    this._quaternion[2] = q[1]\n    this._quaternion[3] = q[2]\n    this._quaternion[4] = q[4]\n    this.updateMatrix()\n  }\n\n\n  get quaternion() {\n    return this._quaternion.slice()\n  }\n\n\n  set scale(s) {\n    this._scale[0] = s[0]\n    this._scale[1] = s[1]\n    this._scale[2] = s[2]\n    this.updateMatrix()\n  }\n\n\n  updateMatrix() {\n    glmatrix.mat4.fromRotationTranslationScale(this._matrix, this._quaternion, this._position, this._scale)\n    this._worldVerticesMustUpdate = true\n  }\n\n}\n\nexport default Mesh\n","import Mesh from './Mesh'\n\nclass Scene {\n  constructor() {\n    this._objects = []\n  }\n\n\n  add(mesh) {\n    if (mesh instanceof Mesh) {\n      this._objects.push(mesh)\n    } else {\n      throw new Error('The provided object is not a Mesh.')\n    }\n\n    return this\n  }\n\n\n  remove(meshId) {\n    for (let i = this._objects.length - 1; i >= 0; i -= 1) {\n      if (this._objects[i].id === meshId) {\n        this._objects.splice(i, 1)\n      }\n    }\n    return this\n  }\n\n\n  get(meshId) {\n    return this._objects.filter(m => m.id === meshId)\n  }\n\n  \n  getAll() {\n    return this._objects\n  }\n}\n\nexport default Scene\n","import * as glmatrix from 'gl-matrix'\n\n// inspired by:\n// https://github.com/mikolalysenko/orbit-camera/blob/master/orbit.js\n\nfunction quatFromVec(out, da) {\n  const x = da[0]\n  const y = da[1]\n  const z = da[2]\n  let s = x * x + y * y\n\n  if (s > 1.0) {\n    s = 1.0\n  }\n  out[0] = -da[0]\n  out[1] = da[1]\n  out[2] = da[2] || Math.sqrt(1.0 - s)\n  out[3] = 0.0\n}\n\n\nlet scratch0 = new Float32Array(16)\nlet scratch1 = new Float32Array(16)\n\n\nclass PerspectiveCamera {\n  constructor(options = {}) {\n    this._rotation = glmatrix.quat.create()\n    this._center = glmatrix.vec3.create()\n    this._distance = 10\n\n    // necessary for the projection matrix\n    this._fovy = Math.PI / 4\n    this._aspectRatio = 16 / 9 // typically width / height\n    this._near = 0.01\n    this._far = Infinity\n\n    if ('eye' in options && 'center' in options && 'up' in options) {\n      this.lookAt(options.eye, options.center, options.up)\n    }\n  }\n\n  lookAt(eye, center, up) {\n    glmatrix.mat4.lookAt(scratch0, eye, center, up)\n    glmatrix.mat3.fromMat4(scratch0, scratch0)\n    glmatrix.quat.fromMat3(this._rotation, scratch0)\n    glmatrix.vec3.copy(this._center, center)\n    this._distance = glmatrix.vec3.distance(eye, center)\n  }\n\n  get matrix() {\n    let m = glmatrix.mat4.create()\n    glmatrix.mat4.invert(m, this.viewMatrix)\n    return m\n  }\n\n  get position() {\n    const m = this.matrix\n    return glmatrix.vec3.fromValues(m[12], m[13], m[14])\n  }\n\n  get viewMatrix() {\n    const out = glmatrix.mat4.create()\n    scratch1[0] = 0\n    scratch1[1] = 0\n    scratch1[2] = -this._distance\n    glmatrix.mat4.fromRotationTranslation(\n      out,\n      glmatrix.quat.conjugate(scratch0, this._rotation),\n      scratch1,\n    )\n    glmatrix.mat4.translate(out, out, glmatrix.vec3.negate(scratch0, this._center))\n    return out\n  }\n\n\n  translate(vec) {\n    const d = this._distance\n    scratch0[0] = -d * (vec[0] || 0)\n    scratch0[1] = d * (vec[1] || 0)\n    scratch0[2] = d * (vec[2] || 0)\n    glmatrix.vec3.transformQuat(scratch0, scratch0, this._rotation)\n    glmatrix.vec3.add(this._center, this._center, scratch0)\n  }\n\n\n  dolly(d) {\n    this._distance += d\n    if (this._distance < 0.0) {\n      this._distance = 0.0\n    }\n  }\n\n\n  rotate(db) { // TODO: simplify this\n    quatFromVec(scratch0, [0, 0])\n    quatFromVec(scratch1, db)\n    glmatrix.quat.invert(scratch1, scratch1)\n    glmatrix.quat.multiply(scratch0, scratch0, scratch1)\n    if (glmatrix.quat.length(scratch0) < 1e-6) {\n      return\n    }\n    glmatrix.quat.multiply(this._rotation, this._rotation, scratch0)\n    glmatrix.quat.normalize(this._rotation, this._rotation)\n  }\n\n\n  get projMatrix() {\n    const pm = glmatrix.mat4.create()\n    glmatrix.mat4.perspective(pm, this._fovy, this._aspectRatio, this._near, this._far)\n    return pm\n  }\n\n\n  set aspectRatio(ar) {\n    this._aspectRatio = ar\n  }\n\n\n  get apectRatio() {\n    return this._aspectRatio\n  }\n\n\n  /**\n   * Vertical field of view in radian\n   */\n  set fieldOfView(fov) {\n    this._fovy = fov\n  }\n\n  get fieldOfView() {\n    return this._fovy\n  }\n\n\n  set near(n) {\n    this._near = n\n  }\n\n\n  get near() {\n    return this._near\n  }\n\n\n  set far(f) {\n    this._far = f\n  }\n\n\n  get far() {\n    return this._far\n  }\n\n}\n\nexport default PerspectiveCamera\n","/* eslint-disable no-continue */\nimport * as glmatrix from 'gl-matrix'\nimport Scene from './Scene'\nimport PerspectiveCamera from './PerspectiveCamera'\nimport CONSTANTS from './Constants'\nimport RENDER_MODES from './renderModes'\n\nclass Renderer {\n  constructor(parentDiv, options) {\n    this._width = 'width' in options ? options.width : window.innerWidth\n    this._height = 'height' in options ? options.height : window.innerHeight\n    this._parentDiv = parentDiv\n\n    this._canvas = document.createElementNS(CONSTANTS.SVG_NAMESPACE, 'svg')\n    this._canvas.setAttribute('xmlns', 'http://www.w3.org/2000/svg')\n    this._canvas.setAttribute('xmlns:xlink', 'http://www.w3.org/1999/xlink')\n    this._canvas.setAttribute('height', `${this._height}`)\n    this._canvas.setAttribute('width', `${this._width}`)\n    this._canvas.setAttribute('viewBox', `0 0 ${this._width} ${this._height}`)\n    this._parentDiv.appendChild(this._canvas)\n\n    this._scene = null\n    this._camera = null\n\n    if ('scene' in options) {\n      this.scene = options.scene\n    }\n\n    if ('camera' in options) {\n      this.camera = options.camera\n    }\n\n  }\n\n\n  set scene(s) {\n    if (s instanceof Scene) {\n      this._scene = s\n    } else {\n      throw new Error('Invalid Scene object.')\n    }\n  }\n\n\n  set camera(c) {\n    if (c instanceof PerspectiveCamera) {\n      this._camera = c\n    } else {\n      throw new Error('Invalid Camera Object.')\n    }\n  }\n\n\n  resetCanvas() {\n    this._canvas.innerHTML = ''\n    // while (this._canvas.firstChild) {\n    //   this._canvas.removeChild(this._canvas.firstChild)\n    // }\n  }\n\n\n  render() {\n    if (this._camera === null) {\n      throw new Error('A Camera must be set.')\n    }\n\n    if (this._scene === null) {\n      throw new Error('A Scene must be set.')\n    }\n\n    this.resetCanvas()\n\n    const meshes = this._scene.getAll()\n    const viewMat = this._camera.viewMatrix\n    const projMat = this._camera.projMatrix\n\n    meshes.forEach((mesh) => {\n      if (!mesh.visible) {\n        return\n      }\n\n      // dealing with matrices\n      const modelMat = mesh.modelMatrix\n      const modelViewMat = glmatrix.mat4.create()\n      const modelViewProjMat = glmatrix.mat4.create()\n      // glmatrix.mat4.multiply(modelViewMat, modelMat, viewMat)\n      // glmatrix.mat4.multiply(modelViewProjMat, modelViewMat, projMat)\n\n      glmatrix.mat4.multiply(modelViewMat, viewMat, modelMat)\n      glmatrix.mat4.multiply(modelViewProjMat, projMat, modelViewMat)\n\n      switch (mesh.renderMode) {\n        case RENDER_MODES.POINT_CLOUD:\n          this._renderPointCloud(mesh, modelViewProjMat)\n          break\n        default: throw new Error('Only point cloud rendering is implemented for the moment.')\n      }\n    })\n  }\n\n\n  /**\n   * transform a 2D unit position [-1, 1] into an actual canvas position\n   * that has origin on top left.\n   */\n  _unit2DPositionToCanvasPosition(unitPos) {\n    return [\n      (unitPos[0] * this._width + this._width) * 0.5,\n      this._height - (unitPos[1] * this._height + this._height) * 0.5,\n    ]\n  }\n\n\n  _renderPointCloud(mesh, mvpMat) {\n    const meshView = mesh.meshView\n    const vertices = mesh.worldVertices\n    const camPosition = this._camera.position\n\n    meshView.reset()\n    const tmpVector = glmatrix.vec3.create()\n\n    for (let i = 0; i < vertices.length; i += 3) {\n      // computing the position of the center of the circle to add\n      glmatrix.vec3.transformMat4(tmpVector, [vertices[i], vertices[i + 1], vertices[i + 2]], mvpMat)\n\n      // No rendering if outside of projection  canonical/frustrum box\n      if (tmpVector[0] >= 1\n      || tmpVector[0] <= -1\n      || tmpVector[1] >= 1\n      || tmpVector[1] <= -1\n      || tmpVector[2] >= 1\n      || tmpVector[2] <= -1) {\n        continue\n      }\n\n      const canvasPos = this._unit2DPositionToCanvasPosition(tmpVector)\n\n      // computing the cirlce radius\n      const mesh2camDistance = ((vertices[i] - camPosition[0]) ** 2 + (vertices[i + 1] - camPosition[1]) ** 2 + (vertices[i + 2] - camPosition[2]) ** 2) ** 0.5\n      const radius = (mesh.radius / (Math.tan(this._camera.fieldOfView / 2) * mesh2camDistance)) * (this._height / 2)\n      meshView.addCircle(canvasPos[0], canvasPos[1], radius)\n    }\n\n    this._canvas.appendChild(meshView.view)\n  }\n}\n\nexport default Renderer\n","module.exports = ParseWavefrontObj\n\n// Map .obj vertex info line names to our returned property names\nvar vertexInfoNameMap = {v: 'vertexPositions', vt: 'vertexUVs', vn: 'vertexNormals'}\n\nfunction ParseWavefrontObj (wavefrontString) {\n  'use strict'\n\n  var parsedJSON = {vertexNormals: [], vertexUVs: [], vertexPositions: [], vertexNormalIndices: [], vertexUVIndices: [], vertexPositionIndices: []}\n\n  var linesInWavefrontObj = wavefrontString.split('\\n')\n\n  var currentLine, currentLineTokens, vertexInfoType, i, k\n\n  // Loop through and parse every line in our .obj file\n  for (i = 0; i < linesInWavefrontObj.length; i++) {\n    currentLine = linesInWavefrontObj[i]\n    // Tokenize our current line\n    currentLineTokens = currentLine.trim().split(/\\s+/)\n    // vertex position, vertex texture, or vertex normal\n    vertexInfoType = vertexInfoNameMap[currentLineTokens[0]]\n\n    if (vertexInfoType) {\n      for (k = 1; k < currentLineTokens.length; k++) {\n        parsedJSON[vertexInfoType].push(parseFloat(currentLineTokens[k]))\n      }\n      continue\n    }\n\n    if (currentLineTokens[0] === 'f') {\n      // Get our 4 sets of vertex, uv, and normal indices for this face\n      for (k = 1; k < 5; k++) {\n        // If there is no fourth face entry then this is specifying a triangle\n        // in this case we push `-1`\n        // Consumers of this module should check for `-1` before expanding face data\n        if (k === 4 && !currentLineTokens[4]) {\n          parsedJSON.vertexPositionIndices.push(-1)\n          parsedJSON.vertexUVIndices.push(-1)\n          parsedJSON.vertexNormalIndices.push(-1)\n        } else {\n          var indices = currentLineTokens[k].split('/')\n          parsedJSON.vertexPositionIndices.push(parseInt(indices[0], 10) - 1) // We zero index\n          parsedJSON.vertexUVIndices.push(parseInt(indices[1], 10) - 1) // our face indices\n          parsedJSON.vertexNormalIndices.push(parseInt(indices[2], 10) - 1) // by subtracting 1\n        }\n      }\n    }\n  }\n\n  return parsedJSON\n}\n","import parseWFObj from 'wavefront-obj-parser'\n\n\nclass ObjParser {\n  static parse(objStr) {\n    const meshData = parseWFObj(objStr)\n    const faces = new Uint32Array(meshData.vertexPositionIndices.filter((v) => v >= 0)) // the lib leaves room for 4-vertices faces by adding -1\n    const vertices = new Float32Array(meshData.vertexPositions)\n    const normals = new Float32Array(meshData.vertexNormals)\n\n    return {\n      vertices,\n      faces,\n      normals,\n    }\n  }\n}\n\nexport default ObjParser\n","import Scene from './Scene'\nimport PerspectiveCamera from './PerspectiveCamera'\nimport Mesh from './Mesh'\nimport RENDER_MODES from './renderModes'\nimport Renderer from './Renderer'\nimport ObjParser from './ObjParser'\n\nexport default ({\n  Scene,\n  PerspectiveCamera,\n  Mesh,\n  Renderer,\n  ObjParser,\n  RENDER_MODES,\n})\n"],"names":["glmatrix.vec3","glmatrix.quat","glmatrix.mat4","glmatrix.mat3","parseWFObj"],"mappings":";;AAAA;AACA;AACA,MAAM,KAAK,CAAC;AACZ,EAAE,OAAO,MAAM,GAAG;AAClB,IAAI,OAAO,sCAAsC,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,KAAK;AAC1E,MAAM,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,EAAC;AACtC,MAAM,MAAM,CAAC,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,EAAC;AAC/C,MAAM,OAAO,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC;AAC3B,KAAK,CAAC,CAAC;AACP,GAAG;AACH;;ACVA,mBAAe;AACf,EAAE,WAAW,EAAE,CAAC;AAChB,EAAE,QAAQ,EAAE,CAAC;AACb,EAAE,kBAAkB,EAAE,CAAC;AACvB;;ACJA,gBAAe;AACf,EAAE,aAAa,EAAE,4BAA4B;AAC7C;;ACAA;AACA;AACA;AACA;AACA,MAAM,QAAQ,CAAC;AACf,EAAE,WAAW,CAAC,IAAI,EAAE;AACpB,IAAI,IAAI,CAAC,KAAK,GAAG,KAAI;AACrB;AACA,IAAI,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,eAAe,CAAC,SAAS,CAAC,aAAa,EAAE,GAAG,EAAC;AACvE,IAAI,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,EAAC;AAClD;AACA,IAAI,IAAI,CAAC,WAAW,GAAG,GAAE;AACzB,IAAI,IAAI,CAAC,kBAAkB,GAAG,EAAC;AAC/B,GAAG;AACH;AACA;AACA,EAAE,IAAI,IAAI,GAAG;AACb,IAAI,OAAO,IAAI,CAAC,KAAK;AACrB,GAAG;AACH;AACA;AACA,EAAE,IAAI,IAAI,GAAG;AACb,IAAI,OAAO,IAAI,CAAC,KAAK;AACrB,GAAG;AACH;AACA;AACA,EAAE,KAAK,GAAG;AACV;AACA,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,GAAE;AAC7B;AACA;AACA;AACA,IAAI,IAAI,CAAC,kBAAkB,GAAG,EAAC;AAC/B,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE;AAC1B,IAAI,IAAI,MAAM,GAAG,KAAI;AACrB;AACA;AACA,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,kBAAkB,GAAG,CAAC,GAAG;AAChE,MAAM,MAAM,GAAG,QAAQ,CAAC,eAAe,CAAC,SAAS,CAAC,aAAa,EAAE,QAAQ,EAAC;AAC1E,MAAM,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,EAAC;AACnC,KAAK,MAAM;AACX;AACA,MAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,kBAAkB,EAAC;AACxD,KAAK;AACL;AACA,IAAI,IAAI,CAAC,kBAAkB,IAAI,EAAC;AAChC;AACA,IAAI,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAC;AACxC,IAAI,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAC;AACxC,IAAI,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,GAAG,EAAE,MAAM,EAAC;AAC5C;AACA,IAAI,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAC;AACzD,IAAI,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,EAAC;AAC9D,IAAI,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,cAAc,EAAE,CAAC,EAAC;AAClD,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,EAAC;AAClC,GAAG;AACH;;AC9DA,MAAM,IAAI,CAAC;AACX,EAAE,WAAW,GAAG;AAChB,IAAI,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,MAAM,GAAE;AAC7B,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,QAAQ,CAAC,IAAI,EAAC;AACvC;AACA;AACA,IAAI,IAAI,CAAC,QAAQ,GAAG,KAAI;AACxB;AACA;AACA,IAAI,IAAI,CAAC,SAAS,GAAG,KAAI;AACzB,IAAI,IAAI,CAAC,cAAc,GAAG,KAAI;AAC9B,IAAI,IAAI,CAAC,MAAM,GAAG,KAAI;AACtB,IAAI,IAAI,CAAC,gBAAgB,GAAG,EAAC;AAC7B,IAAI,IAAI,CAAC,YAAY,GAAG;AACxB,MAAM,GAAG,EAAEA,IAAa,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAC5C,MAAM,GAAG,EAAEA,IAAa,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAC5C,MAAK;AACL;AACA,IAAI,IAAI,CAAC,MAAM,GAAGA,IAAa,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC;AACnD,IAAI,IAAI,CAAC,WAAW,GAAGC,IAAa,CAAC,MAAM,GAAE;AAC7C,IAAI,IAAI,CAAC,SAAS,GAAGD,IAAa,CAAC,MAAM,GAAE;AAC3C;AACA;AACA,IAAI,IAAI,CAAC,WAAW,GAAG,YAAY,CAAC,YAAW;AAC/C,IAAI,IAAI,CAAC,MAAM,GAAG,OAAM;AACxB,IAAI,IAAI,CAAC,QAAQ,GAAG,EAAC;AACrB,IAAI,IAAI,CAAC,cAAc,GAAG,EAAC;AAC3B,IAAI,IAAI,CAAC,OAAO,GAAG,EAAC;AACpB;AACA,IAAI,IAAI,CAAC,OAAO,GAAGE,IAAa,CAAC,MAAM,GAAE;AACzC,IAAI,IAAI,CAAC,wBAAwB,GAAG,KAAI;AACxC,GAAG;AACH;AACA;AACA,EAAE,IAAI,EAAE,GAAG;AACX,IAAI,OAAO,IAAI,CAAC,GAAG;AACnB,GAAG;AACH;AACA;AACA,EAAE,IAAI,UAAU,CAAC,EAAE,EAAE;AACrB,IAAI,IAAI,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE;AAClD,MAAM,IAAI,CAAC,WAAW,GAAG,GAAE;AAC3B,KAAK,MAAM;AACX,MAAM,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC;AACtD,KAAK;AACL,GAAG;AACH;AACA;AACA,EAAE,IAAI,UAAU,GAAG;AACnB,IAAI,OAAO,IAAI,CAAC,WAAW;AAC3B,GAAG;AACH;AACA;AACA,EAAE,IAAI,aAAa,CAAC,CAAC,EAAE;AACvB,IAAI,IAAI,CAAC,cAAc,GAAG,EAAC;AAC3B,GAAG;AACH;AACA;AACA,EAAE,IAAI,aAAa,GAAG;AACtB,IAAI,OAAO,IAAI,CAAC,cAAc;AAC9B,GAAG;AACH;AACA;AACA,EAAE,IAAI,MAAM,CAAC,CAAC,EAAE;AAChB,IAAI,IAAI,CAAC,OAAO,GAAG,EAAC;AACpB,GAAG;AACH;AACA;AACA,EAAE,IAAI,MAAM,GAAG;AACf,IAAI,OAAO,IAAI,CAAC,OAAO;AACvB,GAAG;AACH;AACA;AACA,EAAE,IAAI,QAAQ,CAAC,CAAC,EAAE;AAClB,IAAI,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;AAC5B,MAAM,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC;AACxE,KAAK;AACL;AACA,IAAI,IAAI,CAAC,SAAS,GAAG,EAAC;AACtB,IAAI,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,EAAC;AACrD,IAAI,OAAO,IAAI;AACf,GAAG;AACH;AACA;AACA,EAAE,IAAI,QAAQ,GAAG;AACjB,IAAI,OAAO,IAAI,CAAC,SAAS;AACzB,GAAG;AACH;AACA;AACA,EAAE,IAAI,aAAa,GAAG;AACtB;AACA,IAAI,IAAI,CAAC,IAAI,CAAC,wBAAwB,EAAE;AACxC,MAAM,OAAO,IAAI,CAAC,cAAc;AAChC,KAAK;AACL;AACA,IAAI,MAAM,GAAG,GAAG,IAAI,CAAC,YAAW;AAChC,IAAI,MAAM,OAAO,GAAGF,IAAa,CAAC,MAAM,GAAE;AAC1C,IAAI,MAAM,IAAI,GAAG,IAAI,CAAC,UAAS;AAC/B;AACA,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;AAC5D,MAAM,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,EAAC;AAC1B,MAAM,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAC;AAC9B,MAAM,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAC;AAC9B;AACA,MAAMA,IAAa,CAAC,aAAa,CAAC,OAAO,EAAE,OAAO,EAAE,GAAG,EAAC;AACxD,MAAM,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,EAAC;AACzC,MAAM,IAAI,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,EAAC;AAC7C,MAAM,IAAI,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,EAAC;AAC7C,KAAK;AACL;AACA,IAAI,IAAI,CAAC,wBAAwB,GAAG,MAAK;AACzC,IAAI,OAAO,IAAI,CAAC,cAAc;AAC9B,GAAG;AACH;AACA;AACA,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE;AACf,IAAI,IAAI,CAAC,MAAM,GAAG,EAAC;AACnB,GAAG;AACH;AACA;AACA,EAAE,IAAI,KAAK,GAAG;AACd,IAAI,OAAO,IAAI,CAAC,MAAM;AACtB,GAAG;AACH;AACA;AACA,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE;AACf,IAAI,IAAI,CAAC,MAAM,GAAG,EAAC;AACnB,GAAG;AACH;AACA;AACA,EAAE,IAAI,KAAK,GAAG;AACd,IAAI,OAAO,IAAI,CAAC,MAAM;AACtB,GAAG;AACH;AACA;AACA,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE;AACjB,IAAI,IAAI,CAAC,QAAQ,GAAG,EAAC;AACrB,GAAG;AACH;AACA;AACA,EAAE,IAAI,OAAO,GAAG;AAChB,IAAI,OAAO,IAAI,CAAC,QAAQ;AACxB,GAAG;AACH;AACA;AACA,EAAE,IAAI,eAAe,CAAC,GAAG,EAAE;AAC3B,IAAI,IAAI,CAAC,gBAAgB,GAAG,IAAG;AAC/B,GAAG;AACH;AACA;AACA,EAAE,IAAI,eAAe,GAAG;AACxB,IAAI,OAAO,IAAI,CAAC,gBAAgB;AAChC,GAAG;AACH;AACA,EAAE,IAAI,OAAO,GAAG;AAChB,IAAI,OAAO,IAAI,CAAC,QAAQ;AACxB,GAAG;AACH;AACA;AACA,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE;AACjB,IAAI,IAAI,CAAC,QAAQ,GAAG,EAAC;AACrB,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,EAAE,kBAAkB,GAAG;AACvB,IAAI,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI,EAAE;AACjC,MAAM,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC;AAC5D,KAAK;AACL;AACA,IAAI,IAAI,IAAI,GAAG,CAAC,SAAQ;AACxB,IAAI,IAAI,IAAI,GAAG,CAAC,SAAQ;AACxB,IAAI,IAAI,IAAI,GAAG,CAAC,SAAQ;AACxB,IAAI,IAAI,IAAI,GAAG,CAAC,SAAQ;AACxB,IAAI,IAAI,IAAI,GAAG,CAAC,SAAQ;AACxB,IAAI,IAAI,IAAI,GAAG,CAAC,SAAQ;AACxB;AACA,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;AACvD,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAC;AAC9C,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,EAAC;AAClD,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,EAAC;AAClD,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAC;AAC9C,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,EAAC;AAClD,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,EAAC;AAClD,KAAK;AACL;AACA,IAAI,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAW;AACrC,IAAI,MAAM,UAAU,GAAGA,IAAa,CAAC,MAAM,GAAE;AAC7C,IAAI,MAAM,UAAU,GAAGA,IAAa,CAAC,MAAM,GAAE;AAC7C,IAAIA,IAAa,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,QAAQ,EAAC;AACzE,IAAIA,IAAa,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,QAAQ,EAAC;AACzE;AACA;AACA,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,EAAC;AACrE,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,EAAC;AACrE,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,EAAC;AACrE,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,EAAC;AACrE,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,EAAC;AACrE,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,EAAC;AACrE;AACA,IAAI,OAAO,IAAI;AACf,GAAG;AACH;AACA;AACA,EAAE,IAAI,WAAW,GAAG;AACpB,IAAI,OAAO,IAAI,CAAC,YAAY;AAC5B,GAAG;AACH;AACA;AACA,EAAE,IAAI,WAAW,GAAG;AACpB,IAAI,OAAO,IAAI,CAAC,OAAO;AACvB,GAAG;AACH;AACA;AACA,EAAE,IAAI,QAAQ,GAAG;AACjB,IAAI,OAAO,IAAI,CAAC,SAAS;AACzB,GAAG;AACH;AACA;AACA,EAAE,IAAI,QAAQ,CAAC,CAAC,EAAE;AAClB,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAC;AAC5B,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAC;AAC5B,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAC;AAC5B,IAAI,IAAI,CAAC,YAAY,GAAE;AACvB,GAAG;AACH;AACA;AACA,EAAE,IAAI,QAAQ,GAAG;AACjB,IAAI,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;AACjC,GAAG;AACH;AACA;AACA,EAAE,IAAI,UAAU,CAAC,CAAC,EAAE;AACpB,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAC;AAC9B,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAC;AAC9B,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAC;AAC9B,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAC;AAC9B,IAAI,IAAI,CAAC,YAAY,GAAE;AACvB,GAAG;AACH;AACA;AACA,EAAE,IAAI,UAAU,GAAG;AACnB,IAAI,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;AACnC,GAAG;AACH;AACA;AACA,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE;AACf,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAC;AACzB,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAC;AACzB,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAC;AACzB,IAAI,IAAI,CAAC,YAAY,GAAE;AACvB,GAAG;AACH;AACA;AACA,EAAE,YAAY,GAAG;AACjB,IAAIE,IAAa,CAAC,4BAA4B,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,EAAC;AAC3G,IAAI,IAAI,CAAC,wBAAwB,GAAG,KAAI;AACxC,GAAG;AACH;AACA;;ACxQA,MAAM,KAAK,CAAC;AACZ,EAAE,WAAW,GAAG;AAChB,IAAI,IAAI,CAAC,QAAQ,GAAG,GAAE;AACtB,GAAG;AACH;AACA;AACA,EAAE,GAAG,CAAC,IAAI,EAAE;AACZ,IAAI,IAAI,IAAI,YAAY,IAAI,EAAE;AAC9B,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAC;AAC9B,KAAK,MAAM;AACX,MAAM,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC;AAC3D,KAAK;AACL;AACA,IAAI,OAAO,IAAI;AACf,GAAG;AACH;AACA;AACA,EAAE,MAAM,CAAC,MAAM,EAAE;AACjB,IAAI,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;AAC3D,MAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,MAAM,EAAE;AAC1C,QAAQ,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAC;AAClC,OAAO;AACP,KAAK;AACL,IAAI,OAAO,IAAI;AACf,GAAG;AACH;AACA;AACA,EAAE,GAAG,CAAC,MAAM,EAAE;AACd,IAAI,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,MAAM,CAAC;AACrD,GAAG;AACH;AACA;AACA,EAAE,MAAM,GAAG;AACX,IAAI,OAAO,IAAI,CAAC,QAAQ;AACxB,GAAG;AACH;;ACnCA;AACA;AACA;AACA,SAAS,WAAW,CAAC,GAAG,EAAE,EAAE,EAAE;AAC9B,EAAE,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,EAAC;AACjB,EAAE,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,EAAC;AACjB,EAAE,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,EAAC;AACjB,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAC;AACvB;AACA,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE;AACf,IAAI,CAAC,GAAG,IAAG;AACX,GAAG;AACH,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAC;AACjB,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAC;AAChB,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,EAAC;AACtC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,IAAG;AACd,CAAC;AACD;AACA;AACA,IAAI,QAAQ,GAAG,IAAI,YAAY,CAAC,EAAE,EAAC;AACnC,IAAI,QAAQ,GAAG,IAAI,YAAY,CAAC,EAAE,EAAC;AACnC;AACA;AACA,MAAM,iBAAiB,CAAC;AACxB,EAAE,WAAW,CAAC,OAAO,GAAG,EAAE,EAAE;AAC5B,IAAI,IAAI,CAAC,SAAS,GAAGD,IAAa,CAAC,MAAM,GAAE;AAC3C,IAAI,IAAI,CAAC,OAAO,GAAGD,IAAa,CAAC,MAAM,GAAE;AACzC,IAAI,IAAI,CAAC,SAAS,GAAG,GAAE;AACvB;AACA;AACA,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,EAAE,GAAG,EAAC;AAC5B,IAAI,IAAI,CAAC,YAAY,GAAG,EAAE,GAAG,EAAC;AAC9B,IAAI,IAAI,CAAC,KAAK,GAAG,KAAI;AACrB,IAAI,IAAI,CAAC,IAAI,GAAG,SAAQ;AACxB;AACA,IAAI,IAAI,KAAK,IAAI,OAAO,IAAI,QAAQ,IAAI,OAAO,IAAI,IAAI,IAAI,OAAO,EAAE;AACpE,MAAM,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,EAAE,EAAC;AAC1D,KAAK;AACL,GAAG;AACH;AACA,EAAE,MAAM,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE,EAAE;AAC1B,IAAIE,IAAa,CAAC,MAAM,CAAC,QAAQ,EAAE,GAAG,EAAE,MAAM,EAAE,EAAE,EAAC;AACnD,IAAIC,IAAa,CAAC,QAAQ,CAAC,QAAQ,EAAE,QAAQ,EAAC;AAC9C,IAAIF,IAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,EAAC;AACpD,IAAID,IAAa,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,EAAC;AAC5C,IAAI,IAAI,CAAC,SAAS,GAAGA,IAAa,CAAC,QAAQ,CAAC,GAAG,EAAE,MAAM,EAAC;AACxD,GAAG;AACH;AACA,EAAE,IAAI,MAAM,GAAG;AACf,IAAI,IAAI,CAAC,GAAGE,IAAa,CAAC,MAAM,GAAE;AAClC,IAAIA,IAAa,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAC;AAC5C,IAAI,OAAO,CAAC;AACZ,GAAG;AACH;AACA,EAAE,IAAI,QAAQ,GAAG;AACjB,IAAI,MAAM,CAAC,GAAG,IAAI,CAAC,OAAM;AACzB,IAAI,OAAOF,IAAa,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;AACxD,GAAG;AACH;AACA,EAAE,IAAI,UAAU,GAAG;AACnB,IAAI,MAAM,GAAG,GAAGE,IAAa,CAAC,MAAM,GAAE;AACtC,IAAI,QAAQ,CAAC,CAAC,CAAC,GAAG,EAAC;AACnB,IAAI,QAAQ,CAAC,CAAC,CAAC,GAAG,EAAC;AACnB,IAAI,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,UAAS;AACjC,IAAIA,IAAa,CAAC,uBAAuB;AACzC,MAAM,GAAG;AACT,MAAMD,IAAa,CAAC,SAAS,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC;AACvD,MAAM,QAAQ;AACd,MAAK;AACL,IAAIC,IAAa,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,EAAEF,IAAa,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,EAAC;AACnF,IAAI,OAAO,GAAG;AACd,GAAG;AACH;AACA;AACA,EAAE,SAAS,CAAC,GAAG,EAAE;AACjB,IAAI,MAAM,CAAC,GAAG,IAAI,CAAC,UAAS;AAC5B,IAAI,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,EAAC;AACpC,IAAI,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,EAAC;AACnC,IAAI,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,EAAC;AACnC,IAAIA,IAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS,EAAC;AACnE,IAAIA,IAAa,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,QAAQ,EAAC;AAC3D,GAAG;AACH;AACA;AACA,EAAE,KAAK,CAAC,CAAC,EAAE;AACX,IAAI,IAAI,CAAC,SAAS,IAAI,EAAC;AACvB,IAAI,IAAI,IAAI,CAAC,SAAS,GAAG,GAAG,EAAE;AAC9B,MAAM,IAAI,CAAC,SAAS,GAAG,IAAG;AAC1B,KAAK;AACL,GAAG;AACH;AACA;AACA,EAAE,MAAM,CAAC,EAAE,EAAE;AACb,IAAI,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAC;AACjC,IAAI,WAAW,CAAC,QAAQ,EAAE,EAAE,EAAC;AAC7B,IAAIC,IAAa,CAAC,MAAM,CAAC,QAAQ,EAAE,QAAQ,EAAC;AAC5C,IAAIA,IAAa,CAAC,QAAQ,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAC;AACxD,IAAI,IAAIA,IAAa,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,IAAI,EAAE;AAC/C,MAAM,MAAM;AACZ,KAAK;AACL,IAAIA,IAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,QAAQ,EAAC;AACpE,IAAIA,IAAa,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,EAAC;AAC3D,GAAG;AACH;AACA;AACA,EAAE,IAAI,UAAU,GAAG;AACnB,IAAI,MAAM,EAAE,GAAGC,IAAa,CAAC,MAAM,GAAE;AACrC,IAAIA,IAAa,CAAC,WAAW,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,EAAC;AACvF,IAAI,OAAO,EAAE;AACb,GAAG;AACH;AACA;AACA,EAAE,IAAI,WAAW,CAAC,EAAE,EAAE;AACtB,IAAI,IAAI,CAAC,YAAY,GAAG,GAAE;AAC1B,GAAG;AACH;AACA;AACA,EAAE,IAAI,UAAU,GAAG;AACnB,IAAI,OAAO,IAAI,CAAC,YAAY;AAC5B,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,EAAE,IAAI,WAAW,CAAC,GAAG,EAAE;AACvB,IAAI,IAAI,CAAC,KAAK,GAAG,IAAG;AACpB,GAAG;AACH;AACA,EAAE,IAAI,WAAW,GAAG;AACpB,IAAI,OAAO,IAAI,CAAC,KAAK;AACrB,GAAG;AACH;AACA;AACA,EAAE,IAAI,IAAI,CAAC,CAAC,EAAE;AACd,IAAI,IAAI,CAAC,KAAK,GAAG,EAAC;AAClB,GAAG;AACH;AACA;AACA,EAAE,IAAI,IAAI,GAAG;AACb,IAAI,OAAO,IAAI,CAAC,KAAK;AACrB,GAAG;AACH;AACA;AACA,EAAE,IAAI,GAAG,CAAC,CAAC,EAAE;AACb,IAAI,IAAI,CAAC,IAAI,GAAG,EAAC;AACjB,GAAG;AACH;AACA;AACA,EAAE,IAAI,GAAG,GAAG;AACZ,IAAI,OAAO,IAAI,CAAC,IAAI;AACpB,GAAG;AACH;AACA;;AC3JA;AAMA;AACA,MAAM,QAAQ,CAAC;AACf,EAAE,WAAW,CAAC,SAAS,EAAE,OAAO,EAAE;AAClC,IAAI,IAAI,CAAC,MAAM,GAAG,OAAO,IAAI,OAAO,GAAG,OAAO,CAAC,KAAK,GAAG,MAAM,CAAC,WAAU;AACxE,IAAI,IAAI,CAAC,OAAO,GAAG,QAAQ,IAAI,OAAO,GAAG,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,YAAW;AAC5E,IAAI,IAAI,CAAC,UAAU,GAAG,UAAS;AAC/B;AACA,IAAI,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,eAAe,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAC;AAC3E,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,EAAE,4BAA4B,EAAC;AACpE,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,aAAa,EAAE,8BAA8B,EAAC;AAC5E,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,EAAC;AAC1D,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,EAAC;AACxD,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,EAAC;AAC9E,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,EAAC;AAC7C;AACA,IAAI,IAAI,CAAC,MAAM,GAAG,KAAI;AACtB,IAAI,IAAI,CAAC,OAAO,GAAG,KAAI;AACvB;AACA,IAAI,IAAI,OAAO,IAAI,OAAO,EAAE;AAC5B,MAAM,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,MAAK;AAChC,KAAK;AACL;AACA,IAAI,IAAI,QAAQ,IAAI,OAAO,EAAE;AAC7B,MAAM,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,OAAM;AAClC,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE;AACf,IAAI,IAAI,CAAC,YAAY,KAAK,EAAE;AAC5B,MAAM,IAAI,CAAC,MAAM,GAAG,EAAC;AACrB,KAAK,MAAM;AACX,MAAM,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC;AAC9C,KAAK;AACL,GAAG;AACH;AACA;AACA,EAAE,IAAI,MAAM,CAAC,CAAC,EAAE;AAChB,IAAI,IAAI,CAAC,YAAY,iBAAiB,EAAE;AACxC,MAAM,IAAI,CAAC,OAAO,GAAG,EAAC;AACtB,KAAK,MAAM;AACX,MAAM,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC;AAC/C,KAAK;AACL,GAAG;AACH;AACA;AACA,EAAE,WAAW,GAAG;AAChB,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,GAAE;AAC/B;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE,MAAM,GAAG;AACX,IAAI,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,EAAE;AAC/B,MAAM,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC;AAC9C,KAAK;AACL;AACA,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,EAAE;AAC9B,MAAM,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC;AAC7C,KAAK;AACL;AACA,IAAI,IAAI,CAAC,WAAW,GAAE;AACtB;AACA,IAAI,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAE;AACvC,IAAI,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,WAAU;AAC3C,IAAI,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,WAAU;AAC3C;AACA,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK;AAC7B,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;AACzB,QAAQ,MAAM;AACd,OAAO;AACP;AACA;AACA,MAAM,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAW;AACvC,MAAM,MAAM,YAAY,GAAGA,IAAa,CAAC,MAAM,GAAE;AACjD,MAAM,MAAM,gBAAgB,GAAGA,IAAa,CAAC,MAAM,GAAE;AACrD;AACA;AACA;AACA,MAAMA,IAAa,CAAC,QAAQ,CAAC,YAAY,EAAE,OAAO,EAAE,QAAQ,EAAC;AAC7D,MAAMA,IAAa,CAAC,QAAQ,CAAC,gBAAgB,EAAE,OAAO,EAAE,YAAY,EAAC;AACrE;AACA,MAAM,QAAQ,IAAI,CAAC,UAAU;AAC7B,QAAQ,KAAK,YAAY,CAAC,WAAW;AACrC,UAAU,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,gBAAgB,EAAC;AACxD,UAAU,KAAK;AACf,QAAQ,SAAS,MAAM,IAAI,KAAK,CAAC,2DAA2D,CAAC;AAC7F,OAAO;AACP,KAAK,EAAC;AACN,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,+BAA+B,CAAC,OAAO,EAAE;AAC3C,IAAI,OAAO;AACX,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,GAAG;AACpD,MAAM,IAAI,CAAC,OAAO,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,IAAI,GAAG;AACrE,KAAK;AACL,GAAG;AACH;AACA;AACA,EAAE,iBAAiB,CAAC,IAAI,EAAE,MAAM,EAAE;AAClC,IAAI,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAQ;AAClC,IAAI,MAAM,QAAQ,GAAG,IAAI,CAAC,cAAa;AACvC,IAAI,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,SAAQ;AAC7C;AACA,IAAI,QAAQ,CAAC,KAAK,GAAE;AACpB,IAAI,MAAM,SAAS,GAAGF,IAAa,CAAC,MAAM,GAAE;AAC5C;AACA,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;AACjD;AACA,MAAMA,IAAa,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,MAAM,EAAC;AACrG;AACA;AACA,MAAM,IAAI,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC;AAC3B,SAAS,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AAC3B,SAAS,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC;AAC1B,SAAS,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AAC3B,SAAS,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC;AAC1B,SAAS,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE;AAC7B,QAAQ,QAAQ;AAChB,OAAO;AACP;AACA,MAAM,MAAM,SAAS,GAAG,IAAI,CAAC,+BAA+B,CAAC,SAAS,EAAC;AACvE;AACA;AACA,MAAM,MAAM,gBAAgB,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,IAAG;AAC/J,MAAM,MAAM,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,gBAAgB,CAAC,KAAK,IAAI,CAAC,OAAO,GAAG,CAAC,EAAC;AACrH,MAAM,QAAQ,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,MAAM,EAAC;AAC5D,KAAK;AACL;AACA,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,EAAC;AAC3C,GAAG;AACH;;ACjJA,sBAAc,GAAG,kBAAiB;AAClC;AACA;AACA,IAAI,iBAAiB,GAAG,CAAC,CAAC,EAAE,iBAAiB,EAAE,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE,eAAe,EAAC;AACpF;AACA,SAAS,iBAAiB,EAAE,eAAe,EAAE;AAE7C;AACA,EAAE,IAAI,UAAU,GAAG,CAAC,aAAa,EAAE,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE,eAAe,EAAE,EAAE,EAAE,mBAAmB,EAAE,EAAE,EAAE,eAAe,EAAE,EAAE,EAAE,qBAAqB,EAAE,EAAE,EAAC;AACnJ;AACA,EAAE,IAAI,mBAAmB,GAAG,eAAe,CAAC,KAAK,CAAC,IAAI,EAAC;AACvD;AACA,EAAE,IAAI,WAAW,EAAE,iBAAiB,EAAE,cAAc,EAAE,CAAC,EAAE,EAAC;AAC1D;AACA;AACA,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,mBAAmB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACnD,IAAI,WAAW,GAAG,mBAAmB,CAAC,CAAC,EAAC;AACxC;AACA,IAAI,iBAAiB,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,KAAK,EAAC;AACvD;AACA,IAAI,cAAc,GAAG,iBAAiB,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAC;AAC5D;AACA,IAAI,IAAI,cAAc,EAAE;AACxB,MAAM,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,iBAAiB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACrD,QAAQ,UAAU,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,EAAC;AACzE,OAAO;AACP,MAAM,QAAQ;AACd,KAAK;AACL;AACA,IAAI,IAAI,iBAAiB,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AACtC;AACA,MAAM,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAC9B;AACA;AACA;AACA,QAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAE;AAC9C,UAAU,UAAU,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC;AACnD,UAAU,UAAU,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC;AAC7C,UAAU,UAAU,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC;AACjD,SAAS,MAAM;AACf,UAAU,IAAI,OAAO,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAC;AACvD,UAAU,UAAU,CAAC,qBAAqB,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,EAAC;AAC7E,UAAU,UAAU,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,EAAC;AACvE,UAAU,UAAU,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,EAAC;AAC3E,SAAS;AACT,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA,EAAE,OAAO,UAAU;AACnB;;AC/CA,MAAM,SAAS,CAAC;AAChB,EAAE,OAAO,KAAK,CAAC,MAAM,EAAE;AACvB,IAAI,MAAM,QAAQ,GAAGI,kBAAU,CAAC,MAAM,EAAC;AACvC,IAAI,MAAM,KAAK,GAAG,IAAI,WAAW,CAAC,QAAQ,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAC;AACvF,IAAI,MAAM,QAAQ,GAAG,IAAI,YAAY,CAAC,QAAQ,CAAC,eAAe,EAAC;AAC/D,IAAI,MAAM,OAAO,GAAG,IAAI,YAAY,CAAC,QAAQ,CAAC,aAAa,EAAC;AAC5D;AACA,IAAI,OAAO;AACX,MAAM,QAAQ;AACd,MAAM,KAAK;AACX,MAAM,OAAO;AACb,KAAK;AACL,GAAG;AACH;;ACTA,YAAe,CAAC;AAChB,EAAE,KAAK;AACP,EAAE,iBAAiB;AACnB,EAAE,IAAI;AACN,EAAE,QAAQ;AACV,EAAE,SAAS;AACX,EAAE,YAAY;AACd,CAAC;;;;"}